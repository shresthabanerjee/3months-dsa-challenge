class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        sort(piles.begin(),piles.end());
        int n=piles.size(); int ans=0;
        int start=1;
        int end=piles[n-1];
        while(start<=end)
        { int mid=start+(end-start)/2;
         if(valid(piles,n,h,mid))
         {
             ans=mid;
             end=mid-1;
         }
         else
             start=mid+1;
            
            
            
        }
        return ans;
        
    }
    
    
    bool valid(vector<int>& piles,int n,int h,int mid)
    {
        long long int time=0;
        for(int i=0;i<n;i++)
        { 
            if(piles[i]<=mid) time++;
         else
         {
             
             
             time=time+piles[i]/mid;;
            if(piles[i]%mid!=0)
             time++;
         }
                
            
        }
        if(time<=h) return true;
        else
            return false;
        
    }
};
